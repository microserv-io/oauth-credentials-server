syntax = "proto3";

package oauthcredentials.v1;

option go_package = "github.com/microserv-io/oauth-credentials-server/pkg/proto/oauthcredentials/v1;oauthcredentials";

service OAuthService {
  rpc ListOAuths(ListOAuthsRequest) returns (stream ListOAuthsResponse) {}
  rpc GetOAuthByID(GetOAuthByIDRequest) returns (GetOAuthByIDResponse) {}
  rpc GetOAuthByProvider(GetOAuthByProviderRequest) returns (GetOAuthByProviderResponse) {}
  rpc GetOAuthCredentialByProvider(GetOAuthCredentialByProviderRequest) returns (GetOAuthCredentialByProviderResponse) {}
  rpc ExchangeCodeForToken(ExchangeCodeForTokenRequest) returns (ExchangeCodeForTokenResponse) {}
}

message ListOAuthsRequest {
  string owner = 1;
}

message ListOAuthsResponse {
  repeated OAuth oauths = 1;
}

message GetOAuthByIDRequest {
  string owner = 1;
  string id = 2;
}

message GetOAuthByIDResponse {
  OAuth oauth = 1;
}

message GetOAuthByProviderRequest {
  string owner = 1;
  string provider = 2;
}

message GetOAuthByProviderResponse {
  OAuth oauth = 1;
}

message GetOAuthCredentialByProviderRequest {
  string owner = 1;
  string provider = 2;
}

message GetOAuthCredentialByProviderResponse {
  string access_token = 1;
}

message OAuthTokenRequest {
  string owner = 1;
  string provider = 2;
  string code = 3;
  string redirect_uri = 4;
}

message ExchangeCodeForTokenRequest {
  string owner = 1;
  string provider = 2;
  string code = 3;
  string state = 4;
}

message ExchangeCodeForTokenResponse {}

message OAuth {
  string id = 1;
  string owner = 2;
  string provider = 3;
  repeated string scopes = 6;
}
